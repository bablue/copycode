const fs = require('fs');
const path = require('path');

const directoryPath = path.join(__dirname, 'src');

function readFiles(dir) {
  fs.readdir(dir, (err, files) => {
    if (err) {
      return console.log('Unable to scan directory: ' + err);
    }
    files.forEach((file) => {
      const filePath = path.join(dir, file);
      if (fs.lstatSync(filePath).isDirectory()) {
        readFiles(filePath);
      } else if (filePath.endsWith('.js') || filePath.endsWith('.jsx') || filePath.endsWith('.ts') || filePath.endsWith('.tsx')) {
        fixFile(filePath, dir);
      }
    });
  });
}

function fixFile(filePath, dir) {
  fs.readFile(filePath, 'utf8', (err, data) => {
    if (err) {
      return console.log(err);
    }

    const regex = /from\s+['"]([^./][^'"]*)['"]/g;
    const result = data.replace(regex, (match, p1) => {
      const relativePath = path.relative(dir, path.join(directoryPath, p1));
      if (!relativePath.startsWith('.')) {
        return `from './${relativePath}'`;
      }
      return `from '${relativePath}'`;
    });

    fs.writeFile(filePath, result, 'utf8', (err) => {
      if (err) return console.log(err);
    });
  });
}

readFiles(directoryPath);
